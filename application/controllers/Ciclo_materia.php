<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Ciclo_materia extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->helper('url');
        $this->load->model('Ciclo_materia_model');
    } 

    /*
     * Listing of ciclo_materia
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = array();
        $config = $this->config->item('pagination');
        $config['base_url'] = base_url('ciclo_materia/index');
        $config['total_rows'] = $this->Ciclo_materia_model->get_all_ciclo_materia_count();
        $config['attributes'] = array('class' => 'page-link');

        $this->pagination->initialize($config);

        $data['ciclo_materia'] = $this->Ciclo_materia_model->get_all_ciclo_materia($params);
       
        $data['_view'] = 'abm/ciclo_materia/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new ciclo_materia
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('anio','Anio','integer|required');
		$this->form_validation->set_rules('horas','Horas','numeric');
		$this->form_validation->set_rules('hs_total','Hs Total','numeric');
		$this->form_validation->set_rules('id_ciclo','Id Ciclo','required');
		$this->form_validation->set_rules('id_materia','Id Materia','required');
		$this->form_validation->set_rules('id_regimen','Id Regimen','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'id_ciclo' => $this->input->post('id_ciclo'),
				'id_materia' => $this->input->post('id_materia'),
				'id_regimen' => $this->input->post('id_regimen'),
				'horas' => $this->input->post('horas'),
				'hs_total' => $this->input->post('hs_total'),
				'programa' => $this->input->post('programa'),
				'anio' => $this->input->post('anio'),
				'codigo' => $this->input->post('codigo'),
            );
            
            $ciclo_materia_id = $this->Ciclo_materia_model->add_ciclo_materia($params);
            redirect('ciclo_materia/index');
        }
        else
        {
			$this->load->model('Ciclo_model');
			$data['all_ciclos'] = $this->Ciclo_model->get_all_ciclos();

			$this->load->model('Materia_model');
			$data['all_materias'] = $this->Materia_model->get_all_materias_en_ciclos();

			$this->load->model('Regimen_model');
			$data['all_regimen'] = $this->Regimen_model->get_all_regimen();
            
            $data['_view'] = 'abm/ciclo_materia/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a ciclo_materia
     */
    function edit($id)
    {   
        // check if the ciclo_materia exists before trying to edit it
        $data['ciclo_materia'] = $this->Ciclo_materia_model->get_ciclo_materia($id);
        
        if(isset($data['ciclo_materia']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('anio','Anio','integer|required');
			$this->form_validation->set_rules('codigo','Codigo','alpha_numeric');
			$this->form_validation->set_rules('horas','Horas','numeric');
			$this->form_validation->set_rules('hs_total','Hs Total','numeric');
			$this->form_validation->set_rules('id_ciclo','Id Ciclo','required');
			$this->form_validation->set_rules('id_materia','Id Materia','required');
			$this->form_validation->set_rules('id_regimen','Id Regimen','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'id_ciclo' => $this->input->post('id_ciclo'),
					'id_materia' => $this->input->post('id_materia'),
					'id_regimen' => $this->input->post('id_regimen'),
					'horas' => $this->input->post('horas'),
					'hs_total' => $this->input->post('hs_total'),
					'programa' => $this->input->post('programa'),
					'anio' => $this->input->post('anio'),
					'codigo' => $this->input->post('codigo'),
                );

                $this->Ciclo_materia_model->update_ciclo_materia($id,$params);            
                redirect('ciclo_materia/index');
            }
            else
            {
				$this->load->model('Ciclo_model');
				$data['all_ciclos'] = $this->Ciclo_model->get_all_ciclos();

				$this->load->model('Materia_model');
				$data['all_materias'] = $this->Materia_model->get_all_materias();

				$this->load->model('Regimen_model');
				$data['all_regimen'] = $this->Regimen_model->get_all_regimen();

                $data['_view'] = 'abm/ciclo_materia/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('El ciclo_materia que está tratando de editar no existe.');
    } 

    /*
     * Deleting ciclo_materia
     */
    function remove($id)
    {
        $ciclo_materia = $this->Ciclo_materia_model->get_ciclo_materia($id);

        // check if the ciclo_materia exists before trying to delete it
        if(isset($ciclo_materia['id']))
        {
            $this->Ciclo_materia_model->delete_ciclo_materia($id);
            redirect('ciclo_materia/index');
        }
        else
            show_error('El ciclo_materia que está tratando de eliminar no existe.');
    }
    
}
